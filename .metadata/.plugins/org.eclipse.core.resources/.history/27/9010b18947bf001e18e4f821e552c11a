package ch03;

//public class MaBangJin {
//
//	public static void main(String[] args) {
//		int mabang[][] = new int[5][5];
//		int row = 0;  // 가로
//		int col = 2;  // 세로
//		
//		int cnt = 1;
//		
//		mabang[row][col] = cnt++;
//		while (cnt <= 5*5) {
//			row--;
//			col++;
//		if ((row>=0 && row<5) && (col>=0 && col<5) && mabang[row][col]==0) {
//			mabang[row][col]=cnt++;
//		
//		}else if ((row>=0 && row<5) && (col>=0 && col<5) && mabang[row][col]!=0) {
//			row+=2;
//			col--;
//			mabang[row][col]=cnt++;
//		
//		}else if (row<0 && (col>=0 && col<5)) {
//			row=5-1;
//			mabang[row][col] = cnt++;
//	
//		}else if ((row>=0 && row<5) && col > 5-1) {
//			col=0;
//			mabang[row][col] = cnt++;
//			
//		}else if (row<0 && col>5-1) {
//			row+=2;
//			col--;
//			mabang[row][col]=cnt++; 
//		}	
//	}
//		for(int a=0; a<5; a++) {
//			for(int b=0; b<5; b++) {
//				System.out.println(mabang[a][b]);
//			}
//		}
		
		
		public class MagicSquare {
		    public static void main(String[] args) {
		        Scanner scanner = new Scanner(System.in);
		        int size = 3;

		        try {
		            size = scanner.nextInt();
		        } catch (Exception exception) {
		            return;
		        }

		        if (size < 3 || size % 2 == 0) return;
		        int[][] magicSquare = createMagicSquare(size);

		        for (int[] array: magicSquare) {
		            for (int number: array) System.out.print(number + " ");
		            System.out.println();
		        }
		    }

		    public static int[][] createMagicSquare(int size) {
		        int[][] magicSquare = new int[size][size];

		        int number = 1;
		        int row = 0;
		        int col = size / 2;
		        int currentRow = row;
		        int currentCol = col;

		        while (number <= size * size) {
		            magicSquare[row][col] = number;
		            number++;
		            currentRow = row;
		            currentCol = col;
		            row--;
		            col++;

		            if (row < 0) row = size - 1;
		            if (col == size) col = 0;

		            if (magicSquare[row][col] != 0) {
		                row = currentRow + 1 == size ? 0 : currentRow + 1;
		                col = currentCol;
		            }
		        }
		        return magicSquare;
		    }
		}
		
	
	}

}
